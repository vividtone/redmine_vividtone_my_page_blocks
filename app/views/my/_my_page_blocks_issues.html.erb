<%# The original of this file is 'app/views/my/blocks/_issues.erb' %>
<div class="contextual">
  <%# If Redmine version is 6.0 or later, use the SVG icon introduced in Redmine 6.0 %>
  <% if Gem::Version.new(Redmine::VERSION.to_s) >= Gem::Version.new('6.0.0') %>
    <%= link_to_function sprite_icon('settings', l(:label_options)), "$('##{block}-settings').toggle();", :class => 'icon-only', :title => l(:label_options) %>
  <% else %>
    <%= link_to_function l(:label_options), "$('##{block}-settings').toggle();", :class => 'icon-only icon-settings', :title => l(:label_options) %>
  <% end %>
</div>

<h3>
  <%= "#{query.project} |" if query.project %>
  <%= query.name %>
  (<%= issues.count %>)
</h3>

<div id="<%= block %>-settings" style="display:none;">
  <%= form_tag(my_page_path, :remote => true) do %>
    <div class="box">
      <div id="list-definition">
        <div>
          <%= render_query_columns_selection(query, :name => "settings[#{block}][columns]") %>
        </div>
      </div>
    </div>
    <p>
      <%= submit_tag l(:button_save) %>
      <%= link_to_function l(:button_cancel), "$('##{block}-settings').toggle();" %>
    </p>
  <% end %>
</div>

<% if issues.any? %>
  <%= render :partial => 'issues/list',
             :locals => {
               :issues => issues,
               :query => query,
               :query_options => {
                 :sort_param => "settings[#{block}][sort]",
                 :sort_link_options => {:method => :post, :remote => true}
               }
             } %>
<% else %>
  <p class="nodata"><%= l(:label_no_data) %></p>
<% end %>
